Route helper methods are more dynamic since they are METHODS and not simply strings. This means that if something changes with the route there are many cases where the code itself will not need to change.
Route helper methods can help clean up the view and controller code and assist with readability.
-You CAN NOT use these helper methods in your model files.
Route Helpers translate directly into html friendly paths.
We briefly discussed this resources method in the dynamic routing lesson. This will create routing methods for posts that we can utilize in our views and controllers. Running rake routes in the terminal will give the following output:

posts   GET  /posts(.:format)       posts#index
post    GET  /posts/:id(.:format)   posts#show
These four columns tell us everything that we'll need in order to use the route helper methods. The breakdown is below:

Column 1 - This column gives the prefix for the route helper methods. In the current application, posts and post are the prefixes for the methods that you can use throughout your applications. The two most popular method types are _path and _url. So if we want to render a relative link path to our posts' index page, the method would be posts_path or posts_url. The difference between _path and _url is that _path gives the relative path and _url renders the full URL. If you open up the rails console in the sample app you can test these route helpers out. Run app.posts_path and see what the output is. You can also run app.posts_url and see how it prints out the full path instead of the relative path. In general, it's best to use the _path version so that nothing breaks if your server domain changes.

Column 2 - This is the HTTP verb.

Column 3 - This column shows what the path for the route will be and what parameters need to be passed to the route. As you may notice, the second row for the show route calls for an ID. When you pass the resources method the :show argument, it will automatically create this route and assume that you will need to pass the id into the URL string. Whenever you have id parameters listed in the path like this, you will need to pass the route helper method an ID, so an example of what our show route code would look like is post_path(@post). Notice how this is different than the index route of posts_path. Also, you can ignore the (.:format) text for now. If you open up the Rails console again, you can call the route helpers. If you have a Post with an id of 3, you can run app.post_path(3) and see what the resulting output is. Running route helpers in the rails console is a great way of testing out routes to see what their exact output will be.

Column 4 - This column shows the controller and action with a syntax of controller#action.
